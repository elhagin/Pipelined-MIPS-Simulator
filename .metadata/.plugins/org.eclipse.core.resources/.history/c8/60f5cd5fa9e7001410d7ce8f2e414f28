package mainUnits;

import memory.Simulator;

public class ALU
{
	private int input1;
	private int input2;
	
	public ALU()
	{
		input1 = Simulator.getIDEXReg().getSrcReg1(); //to be adjusted after registers are implemented
		if (Simulator.getControlUnit().getALUSrc() == 0)
		{
			input2 = Simulator.getIDEXReg().getSrcReg2(); //waiting for implementation of ID/EX register 
		}
		else
		{
			input2 = Integer.parseInt(Simulator.getIDEXReg().getLast16Bits(), 2); //waiting for implementation of ID/EX register 
		}
	}
	public String generateControl()
	{
		String aluControl = "1000";
		String funct = Simulator.getIDEXReg().getFunctionCode(); //waiting for implementation of ID/EX register
		String aluOpControlSignal = "" + Simulator.getControlUnit().getALUOp1() + Simulator.getControlUnit().getALUOp0();
		switch (aluOpControlSignal)
		{
			case "00":	aluControl = "0010";
					break;
			case "01":	aluControl = "0110";
					break;
			case "10": switch (funct)
					{
						case "100000": aluControl = "0010";
								 break;
						case "100010": aluControl = "0110";
								 break;
						case "100100": aluControl = "0000";
								 break;
						case "100101": aluControl = "0001";
								 break;
						case "101010": aluControl = "0111";
								 break;
					}
					break;			
		}
		
		return aluControl;
	}
	
	public int getInput1() {
		return input1;
	}
	public void setInput1(int input1) {
		this.input1 = input1;
	}
	public int getInput2() {
		return input2;
	}
	public void setInput2(int input2) {
		this.input2 = input2;
	}
}
