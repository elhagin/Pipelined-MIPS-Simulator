package memory;

import mainUnits.RegisterFile;
import mainUnits.Simulator;
import pipelineRegisters.IDEXReg;
import pipelineRegisters.IFIDReg;

public class InstructionDecode {
	private String instruction;
	private String InstructionCU;
	private String InstructionReadRegister1;
	private String InstructionReadRegister2;
	private String InstructionWriteRegisterBeforeMux;
	private String InstructionSignExtend;

	public  void action(){
		instruction = IFIDReg.getInstruction();
		setInstructionCU(instruction.substring(0, 6));
		if (Simulator.getControlUnit().getRegDst() == 1)
		{
			int rs = RegisterFile.read(instruction.substring(6, 11));
			int rt = RegisterFile.read(instruction.substring(11, 16));
			IDEXReg.setRegData1(rs);
			IDEXReg.setRegData2(rt);
			IDEXReg.setRegWrite(instruction.substring(16, 21));
		}
		else
		{
			if (Simulator.getControlUnit().getRegDst() == 0)
			{
				int rs = RegisterFile.read(instruction.substring(6, 11));
				IDEXReg.setRegData1(rs);
				IDEXReg.setImmediateConstant(Integer.parseInt(instruction.substring(16), 2));
				IDEXReg.setRegWrite(instruction.substring(11, 16));
			}
			else
			{
				
			}
		}
	}
	public String getInstructionCU() {
		return InstructionCU;
	}
	public void setInstructionCU(String instructionCU) {
		InstructionCU = instructionCU;
	}
	public String getInstructionReadRegister1() {
		return InstructionReadRegister1;
	}
	public void setInstructionReadRegister1(String instructionReadRegister1) {
		InstructionReadRegister1 = instructionReadRegister1;
	}
	public String getInstructionReadRegister2() {
		return InstructionReadRegister2;
	}
	public void setInstructionReadRegister2(String instructionReadRegister2) {
		InstructionReadRegister2 = instructionReadRegister2;
	}
	public String getInstructionWriteRegisterBeforeMux() {
		return InstructionWriteRegisterBeforeMux;
	}
	public void setInstructionWriteRegisterBeforeMux(
			String instructionWriteRegisterBeforeMux) {
		InstructionWriteRegisterBeforeMux = instructionWriteRegisterBeforeMux;
	}
	public String getInstructionSignExtend() {
		return InstructionSignExtend;
	}
	public void setInstructionSignExtend(String instructionSignExtend) {
		InstructionSignExtend = instructionSignExtend;
	}
}
